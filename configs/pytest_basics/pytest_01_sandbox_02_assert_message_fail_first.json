{
  "title": "–ù–∞–π–¥–∏ –æ—à–∏–±–∫—É: AssertionError –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏—è",
  "lesson": "pytest_basics_01",
  "fail_first": true,
  "initial_error": {
    "type": "AssertionError",
    "message": "",
    "line": 3,
    "explanation": "–¢–µ—Å—Ç —É–ø–∞–ª, –Ω–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –ü–û–ß–ï–ú–£! –î–æ–±–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ assert –¥–ª—è –ø–æ–Ω—è—Ç–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏."
  },
  "code": "# –ó–∞–ø—É—Å—Ç–∏ ‚Äî —É–≤–∏–¥–∏—à—å –Ω–µ–ø–æ–Ω—è—Ç–Ω—É—é –æ—à–∏–±–∫—É!\ndef test_login_status():\n    status_code = 401\n    assert status_code == 200  # ‚ùå –ü–õ–û–•–û! –ù–µ –ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ –Ω–µ —Ç–∞–∫!\n\ntest_login_status()\n\n# –ò—Å–ø—Ä–∞–≤—å ‚Äî –¥–æ–±–∞–≤—å –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n# assert status_code == 200, f\"Expected 200, got {status_code}\"",
  "expected_fixes": [
    {"pattern": "assert status_code == 200, ", "test": "adds assertion message"}
  ],
  "hints": [
    "–î–æ–±–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ: assert status_code == 200, f\"Expected 200, got {status_code}\"",
    "–í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–π –ø–æ–Ω—è—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ assert –¥–ª—è –ª–µ–≥–∫–æ–π –æ—Ç–ª–∞–¥–∫–∏!"
  ],
  "success_message": "üìù –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç–≤–æ–∏ —Ç–µ—Å—Ç—ã —á–∏—Ç–∞–µ–º—ã–µ! Assertion messages ‚Äî best practice –¥–ª—è pytest!"
}
